name: Deploy application with PM2

on:
  push:
    branches:
      - main

jobs:
  web-deploy:
    name: 🚀 Deploy Vite application to Production
    runs-on: ubuntu-latest
    steps:
      - name: 🚚 Get Latest Code
        uses: actions/checkout@v3

      - name: 💬 Check commit message
        id: check-message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MESSAGE"
          if [[ "$COMMIT_MESSAGE" == *"[deploy pm2]"* ]]; then
            echo "deploy_method=pm2" >> $GITHUB_ENV
          else
            echo "deploy_method=none" >> $GITHUB_ENV
          fi

      - name: 🖥️ Set up Bun
        if: env.deploy_method == 'pm2'
        uses: oven-sh/setup-bun@v1

      - name: 📦 Install dependencies
        if: env.deploy_method == 'pm2'
        run: bun install

      - name: 💿 Build the app
        if: env.deploy_method == 'pm2'
        run: bun run build

      - name: 🔧 Configure SSH
        if: env.deploy_method == 'pm2'
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_DOMAIN }} > ~/.ssh/known_hosts
      
      - name: 💽 Copy files to the server
        if: env.deploy_method == 'pm2'
        run: |
          rsync -azP --delete -e "ssh -o StrictHostKeyChecking=no" ./ ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_DOMAIN }}:~/app

      - name: 📚 Deploy with PM2
          if: env.deploy_method == 'pm2'
          run: |
            ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_DOMAIN }} 'bash -s' << 'EOF'
              # Navigate to the application directory
              cd ~/app
  
              # Create or update the .env file with environment variables
              echo "${{ secrets.ENV_CONTENT }}" > .env
  
              # Stop and remove the PM2 process for the vite-nginx application if it exists
              pm2 delete vite-nginx || true
  
              # Remove the Docker stack for the vite-nginx if it exists
              docker stack rm vite-nginx || true
  
              # Remove all Docker containers (including those that are stopped)
              docker rm $(docker ps -a -q) || true
  
              # Stop any processes using port 80 and kill them if they exist
              sudo lsof -t -i :80 | xargs sudo kill -9 || true
  
              # Start the PM2 processes defined in the ecosystem.config.cjs file with the production environment
              pm2 start ecosystem.config.cjs --env production
  
              # Replace the Nginx configuration file with the new one from the app directory
              sudo cp nginx.conf /etc/nginx/nginx.conf
  
              # Test the new Nginx configuration for syntax errors
              sudo nginx -t
  
              # Restart Nginx to apply the new configuration
              sudo systemctl restart nginx
              EOF